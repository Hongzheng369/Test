//Traversal Method: 
public int heightWithIterative(TreeNode root){
    if(root == null){
    return 0;
    }
    Queue<TreeNode> queue = new LinkedList<>();
    queue.add(root);
    int height = 0;
    
    while(queue.size()>0){
          int nodeCount = queue.size();
          if (nodeCount ==0){
          break;
          }
          height++;
          while(nodeCount>0){
            TreeNode node = queue.remove();
            if(node.left != null){
                    queue.add(node.left);
                    }
            if(node.right !=nullï¼‰{
                    queue.add(node.right);
                    }
                    
                    nodeCount--;
                    }
                    }
                    return height;
                    }
   
   
   
   
\\recursive method
public int height (TreeNode.root){
if(root!=null){
return Math.max(height(root.left),height(root.right)) + 1;
}
return 0;
}

    
